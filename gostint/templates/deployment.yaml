apiVersion: apps/v1beta2
kind: Deployment
metadata:
  name: {{ template "gostint.fullname" . }}
  labels:
    app: {{ template "gostint.name" . }}
    chart: {{ template "gostint.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ template "gostint.name" . }}
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ template "gostint.name" . }}
        release: {{ .Release.Name }}
    spec:
      # securityContext:
      #   fsGroup: 1000
      #   runAsUser: 1000
      initContainers:
        - name: wait-for-mongodb
          image: alpine
          command:
            - 'sh'
            - '-c'
            - |-
              for i in $(seq 1 200)
              do
                nc -z -w3 ${MONGODB_HOST} ${MONGODB_PORT} && \
                  { sleep 15; exit 0; } || sleep 3
              done
              exit 1
          env:
            - name: MONGODB_HOST
              value: {{ template "mongodb.fullname" . }}
            - name: MONGODB_PORT
              value: "27017"
        - name: wait-for-vault-unseal
          image: vault
          securityContext:
            runAsUser: 0
          volumeMounts:
            - name: vaultca
              mountPath: "/vault-ca"
          env:
            - name: VAULT_ADDR
              {{- if .Values.vault.internalToChart }}
              value: https://{{ template "vault.fullname" . }}.{{ .Release.Namespace }}.svc:8200
              {{- else }}
              value: https://{{ template "vault.fullname" . }}:{{ .Values.vault.external.port}}{{ .Values.vault.external.path}}
              {{- end }}
            - name: VAULT_CACERT
              value: "/vault-ca/vault-client-ca.crt"
          command:
            - 'sh'
            - '-x'
            - '-c'
            - |-
              # (
              echo "*** Waiting for vault to be unsealed"
              for i in $(seq 1 200)
              do
                vault status --format=json
                V_STATUS=$(vault status | grep "^Sealed" | awk '{ print $2; }')
                echo "V_STATUS=$V_STATUS"
                if [ "$V_STATUS" = "false" ]
                then
                  exit 0
                fi
                sleep 3
              done
              exit 1
              # ) >> /init.log 2>&1
      terminationGracePeriodSeconds: {{ .Values.terminationGracePeriodSeconds }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: https
              containerPort: 3232
              protocol: TCP
          lifecycle:
            preStop:
              exec:
                command:
                  - 'sh'
                  - '-x'
                  - '-c'
                  - |-
                    # (
                    GPID=$(ps -e | grep /usr/bin/gostint | grep -v grep | awk '{print $1;}')
                    kill -INT $GPID
                    sleep 5
                    while [ 1 == 1 ]
                    do
                      running_jobs=$(curl -s -k https://127.0.0.1:3232/v1/api/health?k=running_jobs)
                      if [ "$running_jobs" == "0" ]
                      then
                        kill $GPID
                        exit 0
                      fi
                      sleep 5
                    done
                    # ) >> /tmp/stop.log 2>&1
          livenessProbe:
            exec:
              command:
                - 'sh'
                - '-xe'
                - '-c'
                - |-
                  ps -efl | grep -v grep | grep /usr/bin/gostint
          readinessProbe:
            exec:
              command:
                - 'sh'
                - '-xe'
                - '-c'
                - |-
                  ps -efl | grep -v grep | grep /usr/bin/gostint
          env:
            - name: GOSTINT_DBURL
              value: {{ template "mongodb.fullname" . }}:27017

            - name: VAULT_ADDR
              {{- if .Values.vault.internalToChart }}
              value: https://{{ template "vault.fullname" . }}.{{ .Release.Namespace }}.svc.cluster.local:8200
              {{- else }}
              value: https://{{ template "vault.fullname" . }}:{{ .Values.vault.external.port}}{{ .Values.vault.external.path}}
              {{- end }}

            - name: VAULT_CACERT
              value: "/vault-ca/vault-client-ca.crt"
            # - name: GOSTINT_DBAUTH_TOKEN
            #   valueFrom:
            #     secretKeyRef:
            #       name: {{ .Release.Name }}-gostint-db-auth-token
            #       key: token
            - name: GOSTINT_ROLENAME
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-gostint-role
                  key: role_name
            - name: GOSTINT_ROLEID
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-gostint-role
                  key: role_id
            - name: GOSTINT_RUN_ROLENAME
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-gostint-run-role
                  key: role_name
            - name: GOSTINT_RUN_ROLEID
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-gostint-run-role
                  key: role_id
            - name: GOSTINT_RUN_SECRETID
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-gostint-run-role
                  key: secret_id
            - name: GOSTINT_SSL_CERT
              value: /gostint-tls/cert.pem
            - name: GOSTINT_SSL_KEY
              value: /gostint-tls/key.pem
            - name: GOSTINT_UI
              {{- if .Values.ui.enabled }}
              value: "1"
              {{- else }}
              value: "0"
              {{- end }}
            {{- if .Values.ui.vaultExternalAddr }}
            - name: VAULT_EXTERNAL_ADDR
              value: {{ .Values.ui.vaultExternalAddr | quote }}
            {{- end }}
          volumeMounts:
            - name: tls
              mountPath: "/gostint-tls"
            - name: vaultca
              mountPath: "/vault-ca"
          # Priviledge for DND
          securityContext:
            privileged: true
            # readOnlyRootFilesystem: true
            # capabilities:
            #   add:
            #   -
          resources:
{{ toYaml .Values.resources | indent 12 }}
    {{- with .Values.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
    {{- end }}
      volumes:
        - name: tls
          secret:
            secretName: {{ .Release.Name }}-gostint-tls
        - name: vaultca
          secret:
            {{- if .Values.vault.internalToChart }}
            secretName: {{ template "vault.fullname" . }}-client-tls
            {{- else }}
            secretName: {{ .Values.vault.external.vaultClientTlsSecret }}
            {{- end }}
      # dnsPolicy: Default
      # dnsPolicy: ClusterFirst
      # dnsPolicy: None
      # dnsConfig:
      #   nameservers:
      #     - 10.96.0.10
      #   searches:
      #     - default.svc.cluster.local
      #     - svc.cluster.local
      #     - cluster.local
      #     - openstacklocal
      #   options:
      #     - name: ndots
      #       value: "0"
